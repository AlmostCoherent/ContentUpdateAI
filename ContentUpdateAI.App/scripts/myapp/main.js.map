{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/content-display/content-display.component.html","webpack:///./src/app/components/content-display/content-display.component.sass","webpack:///./src/app/components/content-display/content-display.component.ts","webpack:///./src/app/components/luis-results/luis-results.component.html","webpack:///./src/app/components/luis-results/luis-results.component.sass","webpack:///./src/app/components/luis-results/luis-results.component.ts","webpack:///./src/app/components/signal-r-response/signal-r-response.component.html","webpack:///./src/app/components/signal-r-response/signal-r-response.component.sass","webpack:///./src/app/components/signal-r-response/signal-r-response.component.ts","webpack:///./src/app/models/enums.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/content.service.ts","webpack:///./src/app/services/luisResults.service.ts","webpack:///./src/app/services/signal-r.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-content-display [currentContent]=\\\"currentContent\\\"></app-content-display>\\r\\n<app-luis-results [currentContent]=\\\"currentContent\\\"></app-luis-results>\\r\\n<app-signal-r-response></app-signal-r-response>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ApiService } from '../app/services/api.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { SimpleCompositeResponse } from './models/luisResponseModel';\r\nimport { Content } from './models/contentModel';\r\nimport { LuisRequestType } from './models/enums';\r\nimport { ContentService } from './services/content.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularMVC';\r\n  private currentContent: Array<Content>;\r\n  private labelForInput: string = \"Enter update instruction:\";\r\n\r\n  constructor(private _contentService: ContentService) {}\r\n  \r\n  ngOnInit() {\r\n    this._contentService.getContentData(\"content/v1/get-content\", \"1\")\r\n      .subscribe(\r\n      data => {\r\n        this.currentContent = data;\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LuisResultsComponent } from './components/luis-results/luis-results.component';\r\nimport { ContentDisplayComponent } from './components/content-display/content-display.component';\nimport { SignalRResponseComponent } from './components/signal-r-response/signal-r-response.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LuisResultsComponent,\r\n    ContentDisplayComponent,\r\n    SignalRResponseComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"luis-page-header\\\">Current Content</div>\\r\\n<div class=\\\"luis-display\\\">\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let item of currentContent;\\\">\\r\\n    <div class=\\\"col-md-1\\\">{{ item.LineNumber }}</div>\\r\\n    <div class=\\\"col-md-11\\\">\\r\\n      <div [innerHTML]=\\\"item.Content\\\"></div>\\r\\n      <div [innerHTML]=\\\"item.ChangeToContent\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGVudC1kaXNwbGF5L2NvbnRlbnQtZGlzcGxheS5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Content } from 'src/app/models/contentModel';\r\n\r\n@Component({\r\n  selector: 'app-content-display',\r\n  templateUrl: './content-display.component.html',\r\n  styleUrls: ['./content-display.component.sass']\r\n})\r\nexport class ContentDisplayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Input() currentContent: Array<Content>;\r\n\r\n}\r\n","module.exports = \"<div class=\\\"luis-form\\\">\\r\\n  <form #luisForm=\\\"ngForm\\\" (ngSubmit)=\\\"AddToLuisCheck(luisForm.form)\\\">\\r\\n    <label for=\\\"luis-query\\\">{{ this.labelForInput }}</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           name=\\\"luis-query\\\"\\r\\n           ngModel\\r\\n           minlength=\\\"3\\\"\\r\\n           #nameField=\\\"ngModel\\\" />\\r\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"luis-page-header\\\">Instructions for LUIS</div>\\r\\n<div class=\\\"luis-display\\\">\\r\\n  <div *ngFor=\\\"let item of luisLinesToCheck; let i = index\\\">{{ item }} <div class=\\\"luis-remove\\\" (click)=\\\"RemoveItemFromArray(i)\\\">X</div></div>\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"GetLuisResult()\\\">Check for Luis matches</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"luis-page-header\\\">Changes to Content</div>\\r\\n<div ng-if=\\\"this.currentLuisChanges\\\" class=\\\"luis-display\\\">\\r\\n  <div *ngFor=\\\"let item of currentLuisChanges\\\">{{ item.LineNumber }} :: <span [innerHTML]=\\\"item.ChangeToContent\\\"></span></div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbHVpcy1yZXN1bHRzL2x1aXMtcmVzdWx0cy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Content } from 'src/app/models/contentModel';\r\nimport { SimpleCompositeResponse } from 'src/app/models/luisResponseModel';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LuisRequestType } from 'src/app/models/enums';\r\nimport { LuisService } from 'src/app/services/luisResults.service';\r\n\r\n@Component({\r\n  selector: 'app-luis-results',\r\n  templateUrl: './luis-results.component.html',\r\n  styleUrls: ['./luis-results.component.sass']\r\n})\r\nexport class LuisResultsComponent implements OnInit {\r\n  //private currentContent: Array<Content>;\r\n  private changedLuisResults: Array<Content>;\r\n  private luisResult: Array<SimpleCompositeResponse>;\r\n  private luisLinesToCheck: string[] = [];\r\n\r\n\r\n  constructor(private _apiService: ApiService, private _luisService: LuisService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  @Input() currentContent: Array<Content>;\r\n  @Input() luisInstructions: string[];\r\n\r\n  //@Input() public setUpLuisChanges(currentContent: Array<Content>, content: string[])\r\n  //{\r\n  //  this.currentContent = currentContent;\r\n  //}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    let temp = \"\";\r\n    //this.luisLinesToCheck = this.luisLinesToCheck;\r\n  }\r\n\r\n  private AddToLuisCheck(newLineToCheck: NgForm) {\r\n    this.luisLinesToCheck.push(newLineToCheck.value[\"luis-query\"]);\r\n    newLineToCheck.reset();\r\n  }\r\n\r\n  private RemoveItemFromArray(indexer: number) {\r\n    this.luisLinesToCheck.splice(indexer, 1);\r\n  }\r\n\r\n  private GetLuisResult() {\r\n    if (this.luisLinesToCheck.length > 0) {\r\n      this._apiService.postDataAndReturnCompositeEntitie('/contentupdate/v1/check-composite', this.luisLinesToCheck, LuisRequestType.CompositeEntity)\r\n        .subscribe(\r\n          data => {\r\n            this.luisResult = data;\r\n            this._luisService.ProcessLuisResponseAndChanges(this.luisResult, this.currentContent);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\n  signal-r-response works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbmFsLXItcmVzcG9uc2Uvc2lnbmFsLXItcmVzcG9uc2UuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SignalRService } from 'src/app/services/signal-r.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-signal-r-response',\n  templateUrl: './signal-r-response.component.html',\n  styleUrls: ['./signal-r-response.component.sass']\n})\nexport class SignalRResponseComponent implements OnInit {\n\n  constructor(public _signalRService: SignalRService, private http: HttpClient) { }\n\n  ngOnInit() {\n    this._signalRService.startConnection();\n    this._signalRService.addTransferChartDataListener();\n    this.startHttpRequest();\n  }\n\n  private startHttpRequest = () => {\n    this.http.get('/api/signalr')\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      })\r\n  }\n\n\n\n}\n","export enum CompositeType {\r\n  LineToUpdate,\r\n  UpdateFrom,\r\n  UpdateTo\r\n}\r\n\r\nexport enum LuisRequestType {\r\n  FullLuisModel,\r\n  CompositeEntity,\r\n  TopScoringIntent\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { Response, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { SimpleCompositeResponse } from '../models/luisResponseModel';\r\nimport { LuisRequestType } from '../models/enums';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || {};\r\n  }\r\n\r\n  handleError(error: any): any {\r\n    return Observable.throw(error.statusText);\r\n  }\r\n\r\n  postDataAndReturnCompositeEntitie(url: string, postObj: any, requestType: LuisRequestType): Observable<Array<SimpleCompositeResponse>> {\r\n    let httpParams = postObj; //new HttpParams().set('query', postObj).set('responseType', requestType.toString());\r\n    return this.httpClient.post<Array<SimpleCompositeResponse>>(url, { query: postObj, responseType: requestType }, httpOptions)\r\n  }\r\n\r\n  getData(url: string, postQuery: string, getType) {\r\n    return this.httpClient.get(url, { params: { query: postQuery, responseType: getType } });\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Content } from '../models/contentModel';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContentService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getContentData(url: string, postObj: any): Observable<Array<Content>> {\r\n    let httpParams = postObj;\r\n    return this.httpClient.post<Array<Content>>(url, { query: postObj }, httpOptions)\r\n  }\r\n\r\n  //public GetContent(id: number) {\r\n  //  return [\r\n  //    new Content(1, \"GoF Definition\"),\r\n  //    new Content(2, \"This chapter covers the Singleton pattern.\"),\r\n  //    new Content(3, \"GoF Definition\"),\r\n  //    new Content(4, \"Ensure a class has only one instance, and provide a global point of access to it.\"),\r\n  //    new Content(5, \"Concept\"),\r\n  //    new Content(6, \"A particular class should have only one instance. You can use this instance whenever \"),\r\n  //    new Content(7, \"you need it and therefore avoid creating unnecessary objects.\"),\r\n  //  ]\r\n  //}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { SimpleCompositeResponse } from \"../models/luisResponseModel\";\r\nimport { Content } from \"../models/contentModel\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LuisService {\r\n  public ProcessLuisResponseAndChanges(responseData: Array<SimpleCompositeResponse>, inputContent: Array<Content>) {\r\n\r\n    responseData.forEach((value: SimpleCompositeResponse) => {\r\n      let indexOfRecord = inputContent.findIndex(x => x.LineNumber.toString() == value.LineToUpdate);\r\n      let currentContent = inputContent[indexOfRecord].Content;\r\n      inputContent[indexOfRecord].ChangeToContent = currentContent.replace(value.UpdateFrom, \"<del>\" + value.UpdateFrom + \"</del><ins>\" + value.UpdateTo + \"</ins>\");;\r\n    })\r\n\r\n    let changedLuisResults: Array<Content> = inputContent.filter(v => v.ChangeToContent != \"\");\r\n\r\n    return changedLuisResults;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as signalR from \"@aspnet/signalr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n  public data: any; //ChartModel[];\r\n\r\n  private hubConnection: signalR.HubConnection;\r\n\r\n  public startConnection = () => {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('/api/v1/get-response')\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started'))\r\n      .catch(err => console.log('Error while starting connection: ' + err))\r\n  }\r\n\r\n  public addTransferChartDataListener = () => {\r\n    this.hubConnection.on('transferchartdata', (data) => {\r\n      this.data = data;\r\n      console.log(data);\r\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}