{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/contentModel.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"luis-form\\\">\\r\\n  <form #luisForm=\\\"ngForm\\\" (ngSubmit)=\\\"AddToLuisCheck(luisForm.form)\\\">\\r\\n    <label for=\\\"luis-query\\\">{{ this.labelForInput }}</label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           name=\\\"luis-query\\\"\\r\\n           ngModel\\r\\n           minlength=\\\"3\\\"\\r\\n           #nameField=\\\"ngModel\\\" />\\r\\n    <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"luis-display\\\">\\r\\n  <div *ngFor=\\\"let item of luisLinesToCheck; let i = index\\\" >{{ item }} <div class=\\\"luis-remove\\\" (click)=\\\"RemoveItemFromArray(i)\\\">X</div></div>\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"GetLuisResult()\\\">Check for Luis matches</button>\\r\\n</div>\\r\\n<div ng-if=\\\"this.luisResult\\\" class=\\\"luis-display\\\">\\r\\n  <div *ngFor=\\\"let item of luisResult; let i = index\\\">{{ item }}</div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../app/services/api.service';\r\n\r\nimport { LuisModel } from './models/luisResponseModel';\r\nimport { Content } from './models/contentModel';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularMVC';\r\n  private luisResult: Array<LuisModel>;\r\n  private content: Array<Content>;\r\n  private luisLinesToCheck: string[] = [];\r\n  private luisUrl: any;\r\n  private labelForInput: string = \"Enter update instruction:\";\r\n\r\n  ngOnInit() {\r\n    this.content = [\r\n\r\n      new Content(1, \"GoF Definition\"),\r\n      new Content(1, \"GoF Definition\"),\r\n      new Content(2, \"This chapter covers the Singleton pattern.\"),\r\n      new Content(3, \"GoF Definition\"),\r\n      new Content(4, \"Ensure a class has only one instance, and provide a global point of access to it.\"),\r\n      new Content(5, \"Concept\"),\r\n      new Content(6, \"A particular class should have only one instance. You can use this instance whenever \"),\r\n      new Content(7, \"you need it and therefore avoid creating unnecessary objects.\"),\r\n    ];\r\n  }\r\n\r\n  private AddToLuisCheck(newLineToCheck: any) {\r\n    this.luisLinesToCheck.push(newLineToCheck.value[\"luis-query\"]);\r\n  }\r\n\r\n  private GetLuisResult() {\r\n    if (this.luisLinesToCheck.length > 0) {\r\n      this.apiService.postDataAndReturnCompositeEntitie('/contentupdate/v1/check-composite', this.luisLinesToCheck)\r\n          .subscribe(\r\n              data => this.luisResult = data\r\n      );\r\n      console.log('this.Content: ', this.content);\r\n      console.log('this.luisResult: ', this.luisResult);\r\n      this.ProcessLuisResponseAndChanges(this.content, this.luisResult);\r\n    }\r\n    console.log(\"Result: \", this.luisResult);\r\n  }\r\n\r\n  private RemoveItemFromArray(indexer: number) {\r\n    this.luisLinesToCheck.splice(indexer, 1);\r\n  }\r\n\r\n  private ProcessLuisResponseAndChanges(existingContent: Array<Content>, luisResult: Array<LuisModel>) {\r\n    //let filteredList = luisResult.Children;\r\n    //console.log(filteredList);\r\n    //for (let luis of luisResult.Children) {\r\n    //  if (existingContent.find(c => c.lineNumber == luis.))\r\n\r\n    //}\r\n\r\n  }\r\n\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\r\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Content {\r\n  lineNumber: number;\r\n  content: string;\r\n  changeToContent: string;\r\n  constructor(lineNumber: number, content: string, changeToContent: string = \"\") {\r\n    this.content = content;\r\n    this.lineNumber = lineNumber;\r\n    this.changeToContent = changeToContent;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Response, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { LuisModel } from '../models/luisResponseModel';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || {};\r\n  }\r\n\r\n  handleError(error: any): any {\r\n    return Observable.throw(error.statusText);\r\n  }\r\n\r\n  postDataAndReturnCompositeEntitie(url: string, postObj: any): Observable<Array<LuisModel>> {\r\n    return this.httpClient.post<Array<LuisModel>>(url, postObj, httpOptions)\r\n  }\r\n\r\n  getData(url: string, postQuery: string) {\r\n    return this.httpClient.get(url, { params: { query: postQuery } });\r\n  }\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}